<#@ template hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System" #>
<#@ import namespace="System" #>
<#@ include file="..\TextTemplating\Include.t4" #>// Generated from ILogger{T}.tt
using System;

namespace Sweetener.Logging
{
    /// <summary>
    /// Represents a client that can log values with a given <see cref="LogLevel"/>
    /// based on their purpose or severity.
    /// </summary>
    /// <typeparam name="T">The type of values to be logged.</typeparam>
    public interface ILogger<T> : IDisposable
    {
        /// <summary>
        /// Gets a value indicating whether logging is synchronized (thread safe).
        /// </summary>
        /// <returns><see langword="true"/> if logging is synchronized (thread safe); otherwise, <see langword="false"/>.</returns>
        bool IsSynchronized { get; }

        /// <summary>
        /// Gets the minimum level of log requests that will be fulfilled.
        /// </summary>
        /// <returns>The minimum <see cref="LogLevel"/> that will be fulfilled.</returns>
        LogLevel MinLevel { get; }

        /// <summary>
        /// Gets an object that can be used to synchronize logging.
        /// </summary>
        /// <returns>An object that can be used to synchronize logging.</returns>
        object SyncRoot { get; }
<#
    foreach (string level in logLevels)
    {
#>

        /// <summary>
        /// Requests that the specified value be logged with the level <see cref="LogLevel.<#= level #>"/>.
        /// </summary>
        /// <remarks>
        /// The log request will only be fulfilled if the <see cref="MinLevel"/> is less
        /// than or equal to <see cref="LogLevel.<#= level #>"/>.
        /// </remarks>
        /// <param name="value">The value requested for logging.</param>
        /// <exception cref="ArgumentNullException">
        /// <typeparamref name="T"/> is a reference type and <paramref name="value"/> is <see langword="null"/>.
        /// </exception>
        /// <exception cref="ObjectDisposedException">The logger is disposed.</exception>
        void <#= level #>(T value);
<#
    }
#>
    }
}
