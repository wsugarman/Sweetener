<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#@ include file="$(MSBuildProjectDirectory)\TextTemplating\Include.t4" #>// Generated from <#= GetTemplateFileName() #>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Sweetener.Reliability.Test
{
    static partial class Expect
    {
<#
    for (int parameterCount = 1; parameterCount <= MaxDelegateParameters + 1; parameterCount++)
    {
        string arguments      = GetArguments     (parameterCount);
        string typeParameters = GetTypeParameters(parameterCount);
#>
        public static Action<<#= typeParameters #>, CallContext> Arguments<<#= typeParameters #>>(Action<<#= typeParameters #>> assertArguments)
            => (<#= arguments #>, context) => assertArguments(<#= arguments #>);

        public static Action<<#= typeParameters #>, CallContext> ArgumentsAfterDelay<<#= typeParameters #>>(Action<<#= typeParameters #>> assertArguments, TimeSpan delay)
            => (<#= arguments #>, context) =>
            {
                assertArguments(<#= arguments #>);

                if (context.Calls > 1)
                    Assert.IsTrue(context.TimeSinceLastCall >= delay, $"Time since last call '{context.TimeSinceLastCall}' less than expected delay '{delay}'.");
            };

<#
    }
#>
    }
}
