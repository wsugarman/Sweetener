parameters:
  project: ''
  netfxTools: 'C:/Program Files (x86)/Microsoft SDKs/Windows/v10.0A/bin/NETFX 4.8 Tools'

jobs:
- job: Build

  pool:
    vmImage: 'windows-latest'

  variables:
    buildConfiguration: 'Release'

  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      projects: |
        src/${{ parameters.Project }}/${{ parameters.Project }}.csproj
        src/${{ parameters.Project }}.Test/${{ parameters.Project }}.Test.csproj
      arguments: '-c $(BuildConfiguration) -p:DelaySign=true'

  - task: DownloadSecureFile@1
    name: SigningKey
    displayName: 'Download Signing Key'
    inputs:
      secureFile: 'Sweetener.snk'

  - task: PowerShell@2
    displayName: 'Sign Assemblies'
    inputs:
      targetType: 'inline'
      script: |
        $assemblies  = @(Get-ChildItem -Path "src/${{ parameters.Project }}/bin/$(BuildConfiguration)/"      -Recurse -Include ${{ parameters.Project }}.dll)
        $assemblies += @(Get-ChildItem -Path "src/${{ parameters.Project }}.Test/bin/$(BuildConfiguration)/" -Recurse -Include ${{ parameters.Project }}.Test.dll)
        foreach ($assembly in $assemblies)
        {
            Start-Process -FilePath "${{ parameters.netfxTools }}/sn.exe" -ArgumentList "-Ra","$assembly","$(SigningKey.SecureFilePath)" -NoNewWindow -Wait
        }
      pwsh: true

  # Note that "Debug" code coverage may result in inaccurate code coverage metrics
  - task: DotNetCoreCLI@2
    displayName: 'Test'
    inputs:
      command: 'test'
      projects: 'src/${{ parameters.Project }}.Test/${{ parameters.Project }}.Test.csproj'
      arguments: '-c $(BuildConfiguration) --no-build --collect "Code Coverage" -s "$(Build.Repository.LocalPath)/src/CodeCoverage.runsettings" -v normal'
